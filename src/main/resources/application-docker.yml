server:
  port: 8443
  ssl:
    key-store-type: PKCS12
    key-store: ${KEY_STORE_PATH}
    key-store-password: ${KEY_STORE_PASSWORD}

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  mail:
    host: ${SPRING_MAIL_HOST:smtp.gmail.com}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
            required: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED:true}
          timeout: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_TIMEOUT:5000}
          
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}

  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update

  h2:
    console:
      enabled: true
      path: /h2-console

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

jwt:
  header: ${JWT_HEADER:Authorization}
  secret: ${JWT_SECRET}

admin:
  key: ${ADMIN_KEY}

toss:
  clientKey: ${TOSS_CLIENT_KEY}
  secretKey: ${TOSS_SECRET_KEY}

kakao:
  client-id: ${KAKAO_CLIENT_ID}
  client-secret: ${KAKAO_CLIENT_SECRET}
  redirect-uri: ${KAKAO_REDIRECT_URI:http://localhost:8080/login/oauth2/code/kakao}

aws:
  s3:
    bucket-name: ${AWS_S3_BUCKET_NAME}
  region: ${AWS_REGION}
  access-key: ${AWS_ACCESS_KEY}
  secret-key: ${AWS_SECRET_KEY}

firebase:
  service-account: ${FIREBASE_SERVICE_ACCOUNT}

